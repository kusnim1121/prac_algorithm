//https://www.acmicpc.net/problem/14725

#include<iostream>
#include<string>
#include<map>
using namespace std;

struct Node{
    int depth;
    map<string,Node*> children;
    Node(int depth):depth(depth){}
    Node* insert(string s){
        if(children.find(s)==children.end()){
            children[s] = new Node(depth+1);
        }
        return children[s];
    }
};
int N,K;
int flag = 0;
void printResult(Node* node){
    auto m = node->children;
    for(auto i=m.begin();i!=m.end();i++){
        if(flag) cout<<"\n";
        else flag = 1;
        for(int j=0;j<node->depth;j++)cout<<"--";
        cout<<i->first;
        printResult(i->second);
    }
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin>>N;
    Node* root = new Node(0);
    while(N--){
        cin>>K;
        Node* curr = root;
        for(int i=0;i<K;i++){
            string s;
            cin>>s;
            curr = curr->insert(s);
        }
    }
    printResult(root);
    return 0;
}
