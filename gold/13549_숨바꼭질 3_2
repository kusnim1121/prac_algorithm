//https://www.acmicpc.net/problem/13549

//BFS를 활용한 솔루션. 다익스트라보다 덜 빠르고 메모리도 더 쓴다.
#include<stdio.h>
#include<queue>
#include<utility>
using namespace std;
typedef pair<int,int> pii;

int N,K;
queue<pii> Q;
int visited[100010];
int withinBound(int x){
    return x >=0 && x<=100000;
}
int bfs(){
    int ret = (1<<31)-1;
    Q.push({N,0});
    while(!Q.empty()){
        auto [cur, time] = Q.front();
        Q.pop();
        visited[cur] = 1;
        if(cur == K) {
            ret = time<ret?time:ret;
            continue;
        }
        if(withinBound(cur-1) && !visited[cur-1])Q.push({cur-1,time+1});
        if(withinBound(cur+1) && !visited[cur+1])Q.push({cur+1,time+1});
        if(withinBound(cur*2) && !visited[cur*2])Q.push({cur*2,time});
    }
    return ret;
}
int main(){
    scanf("%d%d",&N,&K);
    printf("%d",bfs());
    return 0;
}
