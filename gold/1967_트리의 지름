//https://www.acmicpc.net/problem/1967

//Another way of finding diameter of tree.
//다른 방법: 임의의 점에서 가장 거리가 먼 점을 찾는다. 그 점에서 가장 거리가 먼게 지름.
//여기서 쓴 방법: 트리를 post order dfs로 순회하며 가장 긴 거리를 구한다.
#include<stdio.h>
#include<vector>
#include<utility>
using namespace std;

typedef pair<int,int> pii;
int n;
vector<pii> VP[10010];
int ans = 0;
int solve(int n,int lenToN){
    int first=0, second=0;
    for(int i=0;i<VP[n].size();i++){
        auto [next,cost] = VP[n][i];
        int lenToNext = solve(next, cost);
        if(lenToNext > second){
            second = lenToNext;
        }
        if(lenToNext>first){
            second = first;
            first = lenToNext;
        }
    }
    if(first+second>ans)ans = first + second;
    return lenToN + first;
}

int main(){
    scanf("%d",&n);
    for(int i=0;i<n-1;i++){
        int a,b,c;
        scanf("%d%d%d",&a,&b,&c);
        //only need parent -> child info
        VP[a].push_back({b,c});
    }
    solve(1,0);
    printf("%d",ans);
    return 0;
}
