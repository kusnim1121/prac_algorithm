//https://www.acmicpc.net/problem/10816

#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;

int N,M;
vector<int> V;
int lower_bound2(int s, int e,int x){
    if(s>e) return -1;
    int m = (s+e)/2;
    if(x>V[m]){
        int tmp = lower_bound2(m+1,e,x);
        if(tmp == -1) return m+1;
        else return tmp;
    }else{
        int tmp = lower_bound2(s,m-1,x);
        if(tmp == -1) return m;
        else {
            if(V[tmp]==x) return tmp;
            else if(V[m] == x) return m;
            else return tmp;
        }
    }
}

int main(){
    scanf("%d",&N);
    V.reserve(N);
    for(int i=0;i<N;i++){
        int n;
        scanf("%d",&n);
        V.push_back(n);
    }
    sort(V.begin(),V.end());
    scanf("%d",&M);
    while(M--){
        int n;
        scanf("%d",&n);
        int lb = lower_bound2(0,N-1,n);
        int ub = upper_bound(V.begin(),V.end(),n)-V.begin();
        printf("%d ",ub-lb);
    }
    return 0;
}
