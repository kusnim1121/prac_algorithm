//https://www.acmicpc.net/problem/2606

#include<stdio.h>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;

int N,M;
int visited[111];
vector<int> V[111];
queue<int> Q;
int cnt;
void dfs(int n){
    if(visited[n]) return;
    visited[n] = 1;
    cnt++;
    for(int i=0;i<V[n].size();i++){
        dfs(V[n][i]);
    }
}
void bfs(int n){
    Q.push(n);
    while(!Q.empty()){
        int x = Q.front();
        Q.pop();
        if(visited[x]) continue;
        visited[x] = 1;
        cnt++;
        for(int i=0;i<V[x].size();i++){
            Q.push(V[x][i]);
        }
    }
}
int main(){
    scanf("%d%d",&N,&M);
    for(int i=0;i<M;i++){
        int u,v;
        scanf("%d%d",&u,&v);
        V[u].push_back(v);
        V[v].push_back(u);
    }
    //dfs(1);
    bfs(1);
    //minus 1 because computer 1 should not be included
    printf("%d",cnt-1);
    return 0;
}
